"""add all tables

Revision ID: 01f2804b5bd9
Revises: 
Create Date: 2023-05-30 22:35:13.141873

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "01f2804b5bd9"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "accounts",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "account_type",
            sa.Enum(
                "CASH",
                "DEBIT_CREDIT_CARD",
                "CHECKING",
                "DEPOSIT",
                "LOAN",
                name="account_type",
            ),
            nullable=False,
        ),
        sa.Column("account_name", sa.String(), nullable=False),
        sa.Column("balance", sa.Float(), server_default="0.0", nullable=True),
        sa.Column(
            "currency",
            sa.Enum("RUB", "USD", name="currency_type"),
            server_default="RUB",
            nullable=True,
        ),
        sa.Column("account_number", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("is_debit", sa.Boolean(), nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "HEALTH",
                "FOOD",
                "GROCERIES",
                "TRANSFER",
                "TRANSPORT",
                "TRAVEL",
                "WITHDRAW",
                "OTHERS",
                "SUBSCRIPTIONS",
                name="category_type",
            ),
            server_default="OTHERS",
            nullable=True,
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transactions")
    op.drop_table("accounts")
    op.drop_table("users")
    # ### end Alembic commands ###
